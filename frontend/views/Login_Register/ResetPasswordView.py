from PyQt5.QtGui import QFont
from PyQt5.QtWidgets import QWidget, QLabel, QVBoxLayout, QHBoxLayout, QPushButton, QFrame, QSizePolicy, QLineEdit
from PyQt5.QtCore import Qt

from QLNHATRO.RentalManagementApplication.frontend.Style.GlobalStyle import GlobalStyle
from QLNHATRO.RentalManagementApplication.Repository.LoginRepository import LoginRepository
from QLNHATRO.RentalManagementApplication.utils.Validators import Validators
from QLNHATRO.RentalManagementApplication.frontend.Component.ErrorDialog import ErrorDialog
from QLNHATRO.RentalManagementApplication.frontend.Component.SuccessDialog import SuccessDialog
from QLNHATRO.RentalManagementApplication.frontend.Component.LabelUI import LabelUI


class ResetPasswordView(QWidget):
    def __init__(self, username=None):
        super().__init__()
        self.setStyleSheet(GlobalStyle.global_stylesheet())
        self.setWindowTitle("ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u")
        self.setMinimumSize(650, 400)
        self.username = username

        layout = QVBoxLayout(self)
        layout.setContentsMargins(84, 24, 84, 24)
        layout.setSpacing(20)

        # Ti√™u ƒë·ªÅ
        title = QLabel("üîê ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u m·ªõi")
        title.setObjectName("Title")
        title.setAlignment(Qt.AlignCenter)
        layout.addWidget(title)

        # Tr∆∞·ªùng nh·∫≠p m·∫≠t kh·∫©u
        self.create_password_field(layout, "M·∫≠t kh·∫©u m·ªõi:", "new_password")
        self.create_password_field(layout, "X√°c nh·∫≠n m·∫≠t kh·∫©u m·ªõi:", "confirm_password")

        # N√∫t x√°c nh·∫≠n
        submit_btn = QPushButton("X√°c nh·∫≠n thay ƒë·ªïi m·∫≠t kh·∫©u")
        submit_btn.setFixedSize(350, 50)
        submit_btn.clicked.connect(self.on_submit)

        btn_wrapper = QHBoxLayout()
        btn_wrapper.addStretch()
        btn_wrapper.addWidget(submit_btn)
        btn_wrapper.addStretch()
        layout.addLayout(btn_wrapper)

    def on_submit(self):
        new_password = self.new_password_input.text()
        confirm_password = self.confirm_password_input.text()

        if not new_password or not confirm_password:
            ErrorDialog.show_error("‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß m·∫≠t kh·∫©u m·ªõi v√† x√°c nh·∫≠n.", self)
            return

        if not Validators.is_valid_password(new_password):
            ErrorDialog.show_error("‚ùå M·∫≠t kh·∫©u ch∆∞a ƒë·ªß m·∫°nh.\n‚Ä¢ T·ªëi thi·ªÉu 8 k√Ω t·ª±\n‚Ä¢ Ch·ªØ hoa, s·ªë v√† k√Ω t·ª± ƒë·∫∑c bi·ªát.", self)
            return

        if new_password != confirm_password:
            ErrorDialog.show_error("‚ùå M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp v·ªõi m·∫≠t kh·∫©u m·ªõi.", self)
            return

        LoginRepository.change_password_into_database(self.username, new_password)
        SuccessDialog.show_success("‚úÖ M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·∫°i th√†nh c√¥ng!", "", self)
        self.close()

    def create_password_field(self, parent_layout, label_text, object_name):
        field_frame = QFrame()
        field_frame.setFixedHeight(100)
        field_frame.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)

        layout = QVBoxLayout(field_frame)
        layout.setContentsMargins(20, 10, 20, 10)
        layout.setSpacing(5)

        label = QLabel(label_text)
        label.setFont(QFont("Be Vietnam", 16, QFont.Bold))
        layout.addWidget(label)

        password_field = QLineEdit()
        password_field.setObjectName(object_name)
        password_field.setFixedHeight(40)
        password_field.setFixedWidth(600)
        password_field.setEchoMode(QLineEdit.Password)

        layout.addWidget(password_field)
        setattr(self, object_name + "_input", password_field)
        parent_layout.addWidget(field_frame)
