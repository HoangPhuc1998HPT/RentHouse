from PyQt5.QtWidgets import (
    QWidget, QLabel, QLineEdit, QComboBox, QPushButton, QGroupBox,
    QVBoxLayout, QHBoxLayout, QMessageBox,
    QCheckBox, QGridLayout, QScrollArea, QFrame
)
from PyQt5.QtCore import Qt, QRegExp
from PyQt5.QtGui import QRegExpValidator

from QLNHATRO.RentalManagementApplication.controller.RoomController.RoomMenuController import RoomMenuController
from QLNHATRO.RentalManagementApplication.frontend.Style.GlobalStyle import GlobalStyle
from QLNHATRO.RentalManagementApplication.services.RoomService import RoomService


class CreateNewRoom(QWidget):
    def __init__(self, main_window=None):
        super().__init__()
        self.setStyleSheet(GlobalStyle.global_stylesheet())
        self.create_data_for_update = {}
        self.id_landlord = None
        self.main_window = main_window

        # Thi·∫øt l·∫≠p khu v·ª±c cu·ªôn cho tr∆∞·ªùng h·ª£p form d√†i
        scroll_area = QScrollArea()
        scroll_area.setWidgetResizable(True)
        scroll_area.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)

        scroll_content = QWidget()
        scroll_layout = QVBoxLayout(scroll_content)
        scroll_layout.setContentsMargins(20, 20, 20, 20)
        scroll_layout.setSpacing(15)

        # N·ªÄN TR·∫ÆNG CH·ª®A N·ªòI DUNG
        content = QWidget()
        content_layout = QVBoxLayout(content)
        content_layout.setContentsMargins(0, 0, 0, 0)

        # TI√äU ƒê·ªÄ
        header_widget = QWidget()
        header_layout = QVBoxLayout(header_widget)
        header_layout.setContentsMargins(0, 0, 0, 0)

        title = QLabel("üè† T·∫°o ph√≤ng tr·ªç m·ªõi")
        title.setAlignment(Qt.AlignCenter)
        title.setObjectName("Title")
        title.setFixedHeight(60)
        header_layout.addWidget(title)

        # Th√¥ng tin h∆∞·ªõng d·∫´n
        desc_box = QGroupBox("H∆∞·ªõng d·∫´n")
        desc_box.setProperty("theme", "blue")
        desc_layout = QVBoxLayout(desc_box)

        desc = QLabel("‚Ä¢ Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin ƒë·ªÉ th√™m ph√≤ng m·ªõi v√†o h·ªá th·ªëng.")
        desc.setObjectName("sectionLabel")
        desc.setAlignment(Qt.AlignLeft)

        desc_1 = QLabel("‚Ä¢ C√°c tr∆∞·ªùng ƒë√°nh d·∫•u (*) l√† b·∫Øt bu·ªôc ph·∫£i nh·∫≠p.")
        desc_1.setObjectName("infoLabel")
        desc_1.setAlignment(Qt.AlignLeft)

        desc_2 = QLabel("‚Ä¢ ƒê·∫£m b·∫£o nh·∫≠p ƒë√∫ng ƒë·ªãnh d·∫°ng s·ªë cho c√°c tr∆∞·ªùng gi√° ti·ªÅn v√† di·ªán t√≠ch.")
        desc_2.setObjectName("infoLabel")
        desc_2.setAlignment(Qt.AlignLeft)

        desc_layout.addWidget(desc)
        desc_layout.addWidget(desc_1)
        desc_layout.addWidget(desc_2)

        scroll_layout.addWidget(header_widget)
        scroll_layout.addWidget(desc_box)

        # TH√îNG TIN C∆† B·∫¢N V·ªÄ PH√íNG
        basic_info_box = QGroupBox("Th√¥ng tin c∆° b·∫£n")
        basic_info_box.setProperty("theme", "blue")
        basic_info_layout = QGridLayout(basic_info_box)

        # ƒê·∫∑t style cho combo & input ƒë·ªìng b·ªô
        def style_input(widget):
            widget.setFixedHeight(36)
            widget.setStyleSheet("padding-left: 5px;")
            return widget

        def create_input_with_unit(unit_text=None, placeholder="", validator=None):
            container = QWidget()
            layout = QHBoxLayout(container)
            layout.setContentsMargins(0, 0, 0, 0)

            input = QLineEdit()
            input.setPlaceholderText(placeholder)
            style_input(input)

            if validator:
                input.setValidator(validator)

            layout.addWidget(input)

            if unit_text:
                unit = QLabel(unit_text)
                unit.setObjectName("keyLabel")
                unit.setFixedWidth(80)
                unit.setAlignment(Qt.AlignLeft | Qt.AlignVCenter)
                layout.addWidget(unit)

            return input, container

        # Validators
        number_validator = QRegExpValidator(QRegExp(r"[0-9]+"))
        decimal_validator = QRegExpValidator(QRegExp(r"[0-9]+(\.[0-9]+)?"))

        # Input Widgets
        room_name_label = QLabel("T√™n ph√≤ng: *")
        room_name_label.setObjectName("keyLabel")
        self.input_name_room = style_input(QLineEdit())
        self.input_name_room.setPlaceholderText("Nh·∫≠p t√™n ph√≤ng (vd: Ph√≤ng 101)")

        people_label = QLabel("S·ªë ng∆∞·ªùi t·ªëi ƒëa: *")
        people_label.setObjectName("keyLabel")
        self.input_number_people_room = style_input(QLineEdit())
        self.input_number_people_room.setPlaceholderText("Nh·∫≠p s·ªë ng∆∞·ªùi t·ªëi ƒëa")
        self.input_number_people_room.setValidator(number_validator)

        address_label = QLabel("ƒê·ªãa ch·ªâ: *")
        address_label.setObjectName("keyLabel")
        self.input_address_room = style_input(QLineEdit())
        self.input_address_room.setPlaceholderText("Nh·∫≠p ƒë·ªãa ch·ªâ chi ti·∫øt")

        type_label = QLabel("Lo·∫°i ph√≤ng: *")
        type_label.setObjectName("keyLabel")
        self.input_type_room = QComboBox()
        self.input_type_room.addItems(
            ["Ph√≤ng tr·ªç", "Chung c∆∞ mini", "Nh√† nguy√™n cƒÉn", "Chung c∆∞", "Nh√† m·∫∑t ph·ªë", "Kh√°c"])
        style_input(self.input_type_room)

        status_label = QLabel("Tr·∫°ng th√°i:")
        status_label.setObjectName("keyLabel")
        self.input_status_room = QComboBox()
        self.input_status_room.addItems(["Tr·ªëng", "ƒê√£ thu√™", "ƒêang s·ª≠a ch·ªØa", "ƒê·∫∑t c·ªçc"])
        style_input(self.input_status_room)

        # Th√™m v√†o layout
        basic_info_layout.addWidget(room_name_label, 0, 0)
        basic_info_layout.addWidget(self.input_name_room, 0, 1)
        basic_info_layout.addWidget(type_label, 0, 2)
        basic_info_layout.addWidget(self.input_type_room, 0, 3)

        basic_info_layout.addWidget(people_label, 1, 0)
        basic_info_layout.addWidget(self.input_number_people_room, 1, 1)
        basic_info_layout.addWidget(status_label, 1, 2)
        basic_info_layout.addWidget(self.input_status_room, 1, 3)

        basic_info_layout.addWidget(address_label, 2, 0)
        self.input_address_room.setMinimumWidth(300)
        basic_info_layout.addWidget(self.input_address_room, 2, 1, 1, 3)

        scroll_layout.addWidget(basic_info_box)

        # TH√îNG TIN GI√Å PH√íNG V√Ä DI·ªÜN T√çCH
        price_info_box = QGroupBox("Th√¥ng tin gi√° v√† di·ªán t√≠ch")
        price_info_box.setProperty("theme", "blue")
        price_info_layout = QGridLayout(price_info_box)

        area_label = QLabel("Di·ªán t√≠ch: *")
        area_label.setObjectName("keyLabel")
        self.input_area, area_container = create_input_with_unit("m¬≤", "Nh·∫≠p di·ªán t√≠ch", decimal_validator)

        price_room_label = QLabel("Gi√° thu√™: *")
        price_room_label.setObjectName("keyLabel")
        self.input_price_room, price_room_container = create_input_with_unit("VNƒê/th√°ng", "Nh·∫≠p gi√° thu√™",
                                                                             number_validator)

        price_electric_label = QLabel("Gi√° ƒëi·ªán:")
        price_electric_label.setObjectName("keyLabel")
        self.input_price_electric, price_electric_container = create_input_with_unit("VNƒê/kWh", "Nh·∫≠p gi√° ƒëi·ªán",
                                                                                     number_validator)

        price_water_label = QLabel("Gi√° n∆∞·ªõc:")
        price_water_label.setObjectName("keyLabel")
        self.input_price_water, price_water_container = create_input_with_unit("VNƒê/m¬≥", "Nh·∫≠p gi√° n∆∞·ªõc",
                                                                               number_validator)

        # Th√™m v√†o layout
        price_info_layout.addWidget(area_label, 0, 0)
        price_info_layout.addWidget(area_container, 0, 1)
        price_info_layout.addWidget(price_room_label, 0, 2)
        price_info_layout.addWidget(price_room_container, 0, 3)

        price_info_layout.addWidget(price_electric_label, 1, 0)
        price_info_layout.addWidget(price_electric_container, 1, 1)
        price_info_layout.addWidget(price_water_label, 1, 2)
        price_info_layout.addWidget(price_water_container, 1, 3)

        scroll_layout.addWidget(price_info_box)

        # CH·ªà S·ªê ƒê·ªíNG H·ªí
        meter_info_box = QGroupBox("Ch·ªâ s·ªë ƒë·ªìng h·ªì ban ƒë·∫ßu")
        meter_info_box.setProperty("theme", "blue")
        meter_info_layout = QGridLayout(meter_info_box)

        number_electric_label = QLabel("S·ªë ƒëi·ªán ban ƒë·∫ßu:")
        number_electric_label.setObjectName("keyLabel")
        self.input_number_electric, number_electric_container = create_input_with_unit("kWh",
                                                                                       "Nh·∫≠p ch·ªâ s·ªë ƒë·ªìng h·ªì ƒëi·ªán",
                                                                                       number_validator)

        number_water_label = QLabel("S·ªë n∆∞·ªõc ban ƒë·∫ßu:")
        number_water_label.setObjectName("keyLabel")
        self.input_number_water, number_water_container = create_input_with_unit("m¬≥", "Nh·∫≠p ch·ªâ s·ªë ƒë·ªìng h·ªì n∆∞·ªõc",
                                                                                 number_validator)

        # Th√™m v√†o layout
        meter_info_layout.addWidget(number_electric_label, 0, 0)
        meter_info_layout.addWidget(number_electric_container, 0, 1)
        meter_info_layout.addWidget(number_water_label, 0, 2)
        meter_info_layout.addWidget(number_water_container, 0, 3)

        scroll_layout.addWidget(meter_info_box)

        # TH√îNG TIN TI·ªÜN √çCH
        amenities_box = QGroupBox("Ti·ªán √≠ch ph√≤ng")
        amenities_box.setProperty("theme", "blue")
        amenities_layout = QGridLayout(amenities_box)

        self.cb_wifi = QCheckBox("Wifi mi·ªÖn ph√≠")
        self.cb_parking = QCheckBox("Ch·ªó ƒë·ªÉ xe")
        self.cb_aircon = QCheckBox("M√°y l·∫°nh/ƒêi·ªÅu h√≤a")
        self.cb_fridge = QCheckBox("T·ªß l·∫°nh")

        self.cb_wm = QCheckBox("M√°y gi·∫∑t")
        self.cb_security = QCheckBox("B·∫£o v·ªá 24/7")
        self.cb_tv = QCheckBox("TV")
        self.cb_kitchen = QCheckBox("B·∫øp")
        # ---
        self.cb_floor = QCheckBox("T·∫ßng l·∫ßu")
        self.cb_hasLoft = QCheckBox("G√°c l·ª≠ng")
        self.cb_bathroom = QCheckBox("Ph√≤ng t·∫Øm")
        self.cb_balcony = QCheckBox("Ban c√¥ng")

        self.cb_funiture = QCheckBox("N·ªôi th·∫•t c∆° b·∫£n")
        self.cb_pet = QCheckBox("Th√∫ c∆∞ng")

        # Th√™m v√†o layout
        amenities_layout.addWidget(self.cb_wifi, 0, 0)
        amenities_layout.addWidget(self.cb_parking, 0, 1)
        amenities_layout.addWidget(self.cb_aircon, 0, 2)
        amenities_layout.addWidget(self.cb_fridge, 0, 3)

        amenities_layout.addWidget(self.cb_wm, 1, 0)
        amenities_layout.addWidget(self.cb_security, 1, 1)
        amenities_layout.addWidget(self.cb_tv, 1, 2)
        amenities_layout.addWidget(self.cb_kitchen, 1, 3)

        amenities_layout.addWidget(self.cb_floor, 2, 0)
        amenities_layout.addWidget(self.cb_hasLoft, 2, 1)
        amenities_layout.addWidget(self.cb_bathroom, 2, 2)
        amenities_layout.addWidget(self.cb_balcony, 2, 3)

        amenities_layout.addWidget(self.cb_funiture, 3, 0)


        scroll_layout.addWidget(amenities_box)

        # TH√îNG TIN KH√ÅC
        other_info_box = QGroupBox("Th√¥ng tin b·ªï sung")
        other_info_box.setProperty("theme", "blue")
        other_info_layout = QVBoxLayout(other_info_box)

        other_label = QLabel("M√¥ t·∫£ th√™m:")
        other_label.setObjectName("keyLabel")
        self.input_infor_more = QLineEdit()
        self.input_infor_more.setPlaceholderText("Nh·∫≠p c√°c th√¥ng tin b·ªï sung kh√°c v·ªÅ ph√≤ng")
        self.input_infor_more.setMinimumHeight(60)

        other_info_layout.addWidget(other_label)
        other_info_layout.addWidget(self.input_infor_more)

        scroll_layout.addWidget(other_info_box)

        # BUTTON ACTIONS
        button_layout = QHBoxLayout()

        self.btn_clear = QPushButton("X√≥a d·ªØ li·ªáu")
        self.btn_clear.setObjectName("CancelBtn")
        self.btn_clear.setFixedWidth(150)
        self.btn_clear.setFixedHeight(40)
        self.btn_clear.clicked.connect(self.clear_form)

        self.btn_create = QPushButton("T·∫°o ph√≤ng")
        self.btn_create.setFixedWidth(150)
        self.btn_create.setFixedHeight(40)
        self.btn_create.clicked.connect(self.handle_create_room)

        button_layout.addWidget(self.btn_clear)
        button_layout.addSpacing(20)
        button_layout.addWidget(self.btn_create)

        scroll_layout.addLayout(button_layout)
        scroll_layout.addStretch()

        # Th√™m separator tr∆∞·ªõc khu v·ª±c button ƒë·ªÉ chia t√°ch n·ªôi dung
        separator = QFrame()
        separator.setObjectName("separator")
        separator.setFrameShape(QFrame.HLine)
        scroll_layout.addWidget(separator)

        # Thi·∫øt l·∫≠p cu·ªôn
        scroll_area.setWidget(scroll_content)

        # Th√™m n·ªôi dung v√†o main
        main_layout = QVBoxLayout(self)
        main_layout.addWidget(scroll_area)

    def clear_form(self):
        # X√≥a t·∫•t c·∫£ d·ªØ li·ªáu trong form
        self.input_name_room.clear()
        self.input_number_people_room.clear()
        self.input_address_room.clear()
        self.input_type_room.setCurrentIndex(0)
        self.input_status_room.setCurrentIndex(0)
        self.input_infor_more.clear()
        self.input_area.clear()
        self.input_price_room.clear()
        self.input_price_electric.clear()
        self.input_price_water.clear()
        self.input_number_electric.clear()
        self.input_number_water.clear()

        # X√≥a checkboxes
        self.cb_wifi.setChecked(False)
        self.cb_parking.setChecked(False)
        self.cb_aircon.setChecked(False)
        self.cb_fridge.setChecked(False)
        self.cb_wm.setChecked(False)
        self.cb_security.setChecked(False)
        self.cb_tv.setChecked(False)
        self.cb_kitchen.setChecked(False)

    def validate_form(self):
        # Ki·ªÉm tra c√°c tr∆∞·ªùng b·∫Øt bu·ªôc
        required_fields = [
            (self.input_name_room, "T√™n ph√≤ng"),
            (self.input_number_people_room, "S·ªë ng∆∞·ªùi t·ªëi ƒëa"),
            (self.input_address_room, "ƒê·ªãa ch·ªâ"),
            (self.input_area, "Di·ªán t√≠ch"),
            (self.input_price_room, "Gi√° thu√™")
        ]

        for field, name in required_fields:
            if not field.text().strip():
                QMessageBox.warning(self, "Thi·∫øu th√¥ng tin", f"Vui l√≤ng nh·∫≠p {name}.")
                field.setFocus()
                return False

        # Ki·ªÉm tra ƒë·ªãnh d·∫°ng s·ªë
        number_fields = [
            (self.input_number_people_room, "S·ªë ng∆∞·ªùi t·ªëi ƒëa"),
            (self.input_area, "Di·ªán t√≠ch"),
            (self.input_price_room, "Gi√° thu√™")
        ]

        for field, name in number_fields:
            try:
                if field.text().strip():
                    float(field.text().strip())
            except ValueError:
                QMessageBox.warning(self, "ƒê·ªãnh d·∫°ng kh√¥ng h·ª£p l·ªá",
                                    f"{name} ph·∫£i l√† s·ªë.")
                field.setFocus()
                return False

        return True

    def collect_amenities(self):
        amenities = []
        if self.cb_wifi.isChecked():
            amenities.append("Wifi mi·ªÖn ph√≠")
        if self.cb_parking.isChecked():
            amenities.append("Ch·ªó ƒë·ªÉ xe")
        if self.cb_aircon.isChecked():
            amenities.append("M√°y l·∫°nh/ƒêi·ªÅu h√≤a")
        if self.cb_fridge.isChecked():
            amenities.append("T·ªß l·∫°nh")
        if self.cb_wm.isChecked():
            amenities.append("M√°y gi·∫∑t")
        if self.cb_security.isChecked():
            amenities.append("B·∫£o v·ªá 24/7")
        if self.cb_tv.isChecked():
            amenities.append("TV")
        if self.cb_kitchen.isChecked():
            amenities.append("B·∫øp")

        return ", ".join(amenities)

    def handle_create_room(self):
        if not self.validate_form():
            return

        # Thu th·∫≠p th√¥ng tin ti·ªán √≠ch
        amenities = self.collect_amenities()

        # K·∫øt h·ª£p th√¥ng tin b·ªï sung v·ªõi ti·ªán √≠ch
        other_info = self.input_infor_more.text().strip()
        if amenities and other_info:
            combined_info = f"Ti·ªán √≠ch: {amenities}. {other_info}"
        elif amenities:
            combined_info = f"Ti·ªán √≠ch: {amenities}"
        else:
            combined_info = other_info

        create_data = RoomService.collect_data_create_room(
            id_landlord=self.id_landlord,
            room_name=self.input_name_room.text().strip(),
            number_people=self.input_number_people_room.text().strip(),
            address=self.input_address_room.text().strip(),
            type_room=self.input_type_room.currentText(),
            status=self.input_status_room.currentText(),
            other_infor=combined_info,
            area=self.input_area.text().strip(),
            price_rent=self.input_price_room.text().strip(),
            electric_price=self.input_price_electric.text().strip() or "0",
            water_price=self.input_price_water.text().strip() or "0",
            num_electric=self.input_number_electric.text().strip() or "0",
            num_water=self.input_number_water.text().strip() or "0",
        )

        print("[DEBUG] D·ªØ li·ªáu t·∫°o ph√≤ng:", create_data)

        # X√°c nh·∫≠n t·∫°o ph√≤ng
        confirm_box = QMessageBox()
        confirm_box.setIcon(QMessageBox.Question)
        confirm_box.setWindowTitle("X√°c nh·∫≠n t·∫°o ph√≤ng")
        confirm_box.setText(f"B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën t·∫°o ph√≤ng {self.input_name_room.text()} kh√¥ng?")
        confirm_box.setStandardButtons(QMessageBox.Yes | QMessageBox.No)
        confirm_box.setDefaultButton(QMessageBox.No)

        if confirm_box.exec_() == QMessageBox.Yes:
            result = RoomMenuController.go_to_handel_data_for_create_room(self.id_landlord, create_data)

            if result:  # Gi·∫£ s·ª≠ h√†m tr·∫£ v·ªÅ True n·∫øu th√†nh c√¥ng
                QMessageBox.information(
                    self,
                    "T·∫°o ph√≤ng th√†nh c√¥ng",
                    "Ph√≤ng tr·ªç ƒë√£ ƒë∆∞·ª£c th√™m v√†o h·ªá th·ªëng th√†nh c√¥ng!",
                    QMessageBox.StandardButton.Ok
                )
                self.clear_form()
            else:
                QMessageBox.critical(
                    self,
                    "L·ªói",
                    "C√≥ l·ªói x·∫£y ra khi t·∫°o ph√≤ng. Vui l√≤ng th·ª≠ l·∫°i sau!",
                    QMessageBox.StandardButton.Ok
                )

'''
from PyQt5.QtWidgets import (
    QWidget, QLabel, QLineEdit, QComboBox, QPushButton,
    QVBoxLayout, QHBoxLayout, QFormLayout, QMessageBox
)
from PyQt5.QtCore import Qt

from QLNHATRO.RentalManagementApplication.controller.RoomController.RoomMenuController import RoomMenuController
from QLNHATRO.RentalManagementApplication.frontend.Component.LabelUI import LabelDarkUI
from QLNHATRO.RentalManagementApplication.frontend.Style.GlobalStyle import GlobalStyle
from QLNHATRO.RentalManagementApplication.services.RoomService import RoomService


class CreateNewRoom(QWidget):
    def __init__(self, main_window=None):
        super().__init__()
        self.setStyleSheet(GlobalStyle.global_stylesheet())
        self.create_data_for_update ={}
        self.id_lanlord = None

        main_layout = QVBoxLayout(self)

        # N·ªÄN TR·∫ÆNG CH·ª®A N·ªòI DUNG
        content = QWidget()
        #content.setStyleSheet("background-color: white; border-radius: 16px; padding: 32px;")
        content_layout = QVBoxLayout(content)

        # TI√äU ƒê·ªÄ
        title = QLabel("üè† T·∫°o ph√≤ng tr·ªç m·ªõi")
        title.setAlignment(Qt.AlignCenter)
        #title.setStyleSheet("font-size: 24px; font-weight: bold;")
        title.setObjectName("Title")  # ‚úÖ s·∫Ω d√πng style c·ªßa QLabel#Title
        title.setFixedHeight(60)
        content_layout.addWidget(title)
        content_layout.addSpacing(10)

        # Th√™m ti√™u ƒë·ªÅ

        desc = QLabel("** Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin ƒë·ªÉ th√™m ph√≤ng m·ªõi v√†o h·ªá th·ªëng.")
        #desc.setStyleSheet("color: #666; font-size: 13px;")
        desc.setAlignment(Qt.AlignLeft)
        desc_1 = QLabel("** Nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin v√† ƒë·∫£m b·∫£o c√°c th√¥ng tin ƒë∆∞·ª£c nh·∫≠p l√† ch√≠nh x√°c")
        desc_1.setAlignment(Qt.AlignLeft)

        content_layout.addWidget(desc)
        content_layout.addWidget(desc_1)
        # T·∫†O 2 FORM C·ªòT TR√ÅI & PH·∫¢I
        form_row = QHBoxLayout()
        form_left = QFormLayout()
        form_right = QFormLayout()

        # ƒê·∫∑t style cho combo & input ƒë·ªìng b·ªô
        def style_input(widget):
            widget.setFixedHeight(36)
            widget.setFixedWidth(240)
            return widget

        def create_input_with_unit(unit_text=None):
            layout = QHBoxLayout()
            input = style_input(QLineEdit())
            layout.addWidget(input)

            if unit_text:
                unit = QLabel(unit_text)
                unit.setFixedWidth(80)
                unit.setAlignment(Qt.AlignLeft)
                layout.addWidget(unit)
            return input, layout

        # Input Widgets
        self.input_name_room = style_input(QLineEdit())
        self.input_number_people_room = style_input(QLineEdit())
        self.input_address_room = style_input(QLineEdit())

        self.input_type_room = QComboBox()
        self.input_type_room.addItems(["Ph√≤ng tr·ªç", "Chung c∆∞", "Nh√† nguy√™n cƒÉn","Kh√°c"])
        style_input(self.input_type_room)

        self.input_status_room = QComboBox()
        self.input_status_room.addItems(["Tr·ªëng", "ƒê√£ thu√™"])
        style_input(self.input_status_room)

        self.input_infor_more = style_input(QLineEdit())
        self.input_area, area_layout = create_input_with_unit("m¬≤")
        self.input_price_room, price_room_layout = create_input_with_unit("VNƒê")
        self.input_price_electric, price_electric_layout = create_input_with_unit("VNƒê/kWh")
        self.input_price_water, price_water_layout = create_input_with_unit("VNƒê/m¬≥")
        self.input_number_electric, number_electric_layout = create_input_with_unit("kWh")
        self.input_number_water, number_water_layout = create_input_with_unit("m¬≥")

        # TH√äM V√ÄO C·ªòT TR√ÅI
        form_left.addRow(LabelDarkUI("T√™n ph√≤ng:"), self.input_name_room)
        form_left.addRow(LabelDarkUI("S·ªë nguoif t·ªëi ƒëa:"), self.input_number_people_room)
        form_left.addRow(LabelDarkUI("ƒê·ªãa ch·ªâ:"), self.input_address_room)
        form_left.addRow(LabelDarkUI("Lo·∫°i ph√≤ng:"), self.input_type_room)
        form_left.addRow(LabelDarkUI("Tr·∫°ng th√°i:"), self.input_status_room)
        form_left.addRow(LabelDarkUI("Th√¥ng tin kh√°c:"), self.input_infor_more)

        # TH√äM V√ÄO C·ªòT PH·∫¢I
        form_right.addRow(LabelDarkUI("Di·ªán t√≠ch:"), area_layout)
        form_right.addRow(LabelDarkUI("Gi√° thu√™:"), price_room_layout)
        form_right.addRow(LabelDarkUI("Gi√° ƒëi·ªán:"), price_electric_layout)
        form_right.addRow(LabelDarkUI("Gi√° n∆∞·ªõc:"), price_water_layout)
        form_right.addRow(LabelDarkUI("S·ªë ƒëi·ªán:"), number_electric_layout)
        form_right.addRow(LabelDarkUI("S·ªë n∆∞·ªõc:"), number_water_layout)

        # G·ªòP 2 FORM V√ÄO FORM ROW
        form_row.addLayout(form_left)
        form_row.addSpacing(10)
        form_row.addLayout(form_right)
        content_layout.addLayout(form_row)

        # BUTTON T·∫†O PH√íNG
        btn_create = QPushButton("T·∫°o ph√≤ng")
        btn_create.setFixedWidth(180)



        btn_create.clicked.connect(self.handle_create_room)
        content_layout.addSpacing(10)
        content_layout.addWidget(btn_create, alignment=Qt.AlignCenter)

        # Th√™m n·ªôi dung v√†o main
        main_layout.addWidget(content)

    def handle_create_room(self):
        create_data = RoomService.collect_data_create_room(
                id_landlord=self.id_lanlord,
                room_name=self.input_name_room.text(),
                number_people=self.input_number_people_room.text(),
                address=self.input_address_room.text(),
                type_room=self.input_type_room.currentText(),
                status=self.input_status_room.currentText(),
                other_infor=self.input_infor_more.text(),
                area=self.input_area.text(),
                price_rent=self.input_price_room.text(),
                electric_price=self.input_price_electric.text(),
                water_price=self.input_price_water.text(),
                num_electric=self.input_number_electric.text(),
                num_water=self.input_number_water.text(),
            )

        print("[DEBUG] D·ªØ li·ªáu t·∫°o ph√≤ng:", create_data)
        RoomMenuController.go_to_handel_data_for_create_room(self.id_lanlord, create_data)
        # Xu·∫•t h·ªôp tho·∫°i th√¥ng b√°o
        QMessageBox.information(
            self,
            "T·∫°o ph√≤ng th√†nh c√¥ng",
            "Ph√≤ng tr·ªç ƒë√£ ƒë∆∞·ª£c th√™m v√†o h·ªá th·ªëng th√†nh c√¥ng!",
            QMessageBox.StandardButton.Ok
        )
'''